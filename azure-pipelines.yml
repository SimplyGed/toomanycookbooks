# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

variables:
  Major: 0
  Minor: 0

name: $(Major).$(Minor).$(Rev:r)

pool:
  vmImage: ubuntu-latest

stages:
- stage: Build
  displayName: Build
  
  jobs:
  - job:
    displayName: Build
    steps:
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: --configuration Release

    - task: DotNetCoreCLI@2
      displayName: Publish app
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '**/*.csproj'
        modifyOutputPath: false
        zipAfterPublish: false
        arguments: --no-build --configuration Release -o $(Build.ArtifactStagingDirectory)

    - task: PublishBuildArtifacts@1
      displayName: Publish artifact
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'app'
        publishLocation: 'Container'

    - task: Docker@2
      displayName: Build and push to Docker
      inputs:
        containerRegistry: 'TooManyCookBooks ACR Dev'
        repository: 'toomanycookbooks-dev'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: '$(Build.BuildNumber)'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - job:
    steps:
      - task: AzureRmWebAppDeployment@4
        displayName: Deploy Web App
        inputs:
          ConnectionType: 'AzureRM'
          azureSubscription: 'Visual Studio Premium with MSDN(bbe8e064-d490-470f-8e8a-485bd7227583)'
          appType: 'webAppContainer'
          WebAppName: 'toomanycookbooks-dev'
          DockerNamespace: 'toomanycookbooksdev.azurecr.io'
          DockerRepository: 'toomanycookbooks-dev'
          DockerImageTag: $(Build.BuildNumber)
          