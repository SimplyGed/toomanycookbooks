# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

variables:
  Major: 0
  Minor: 0


name: $(Major).$(Minor).$(Rev:r)

pool:
  vmImage: ubuntu-latest

stages:
- stage: Build
  displayName: Build
  
  jobs:
  - job:
    displayName: Build
    steps:
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: --configuration Release

    - task: DotNetCoreCLI@2
      displayName: Publish app
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '**/*.csproj'
        modifyOutputPath: false
        zipAfterPublish: false
        arguments: --no-build --configuration Release -o $(Build.ArtifactStagingDirectory)

    - task: PublishBuildArtifacts@1
      displayName: Publish artifact
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'app'
        publishLocation: 'Container'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  variables:
  - group: StaticWebAppDev
  jobs:
  - job:
    displayName: Deploy Static Web App
    steps:
    - task: DownloadBuildArtifacts@1
      displayName: Download artifact
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'app'
        downloadPath: '$(System.DefaultWorkingDirectory)'

    - task: AzureStaticWebApp@0
      displayName: Deploy app
      inputs:
        app_location: '/app/wwwroot'
        skip_app_build: true
        azure_static_web_apps_api_token: '$(static-web-app-token)'
